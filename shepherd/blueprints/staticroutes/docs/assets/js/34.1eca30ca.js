(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{215:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"ultrasonic-sensors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ultrasonic-sensors","aria-hidden":"true"}},[t._v("#")]),t._v(" Ultrasonic Sensors")]),t._v(" "),a("p",[t._v("Ultrasonic sensors can be used for calculating the distance from a sensor to the nearest solid object.")]),t._v(" "),a("p",[t._v("They do this through emitting a pulse of ultrasonic sound and recording the time taken for the echo to return.")]),t._v(" "),a("p",[t._v("We can control ultrasonic sensors through all gpio on the Brain Box.")]),t._v(" "),a("h2",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python","aria-hidden":"true"}},[t._v("#")]),t._v(" Python")]),t._v(" "),a("p",[t._v("You can create an ultrasonic sensor through creating an "),a("code",[t._v("UltrasonicSensor")]),t._v(" object.")]),t._v(" "),a("p",[t._v("The arguments to the initialisation function are first the trigger pin, followed by the echo pin. For example this configures a sensor with trigger on GPIO0 and echo on GPIO1.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("sensor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UltrasonicSensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("We can then read the value of this sensor through calling the read() function which returns a distance in meters.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("distance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Here's a complete example:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" robot\n\nR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Robot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsensor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UltrasonicSensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndistance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"i-want-to-use-more-than-one-ultrasound-sensor-but-don-t-have-enough-gpio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-want-to-use-more-than-one-ultrasound-sensor-but-don-t-have-enough-gpio","aria-hidden":"true"}},[t._v("#")]),t._v(" I want to use more than one ultrasound sensor but don't have enough GPIO")]),t._v(" "),a("p",[t._v("The BrainBox can support (theoretically) up to 7 ultrasonic sensors. We do this through daisy-chaining the echo pin of one sensor to the trigger pin of another.")]),t._v(" "),a("p",[t._v("For example for two sensors, sensor A has trigger pin GPIO0, and echo GPIO1, and sensor B has trigger pin GPIO1 and echo GPIO2.")]),t._v(" "),a("p",[t._v("You can create an ultrasonic sensor combining these two physical sensors, by listing the echo pins in order.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("sensors "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UltrasonicSensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("If the echo pins are listed in the wrong order incorrect values may be returned")])]),t._v(" "),a("h2",{attrs:{id:"blockly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockly","aria-hidden":"true"}},[t._v("#")]),t._v(" Blockly")]),t._v(" "),a("p",[t._v("The use of ultrasonic sensors in blockly is currently unsupported.")])])}],!1,null,null,null);s.default=e.exports}}]);